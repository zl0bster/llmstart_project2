"""
–¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö LLM –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ @scen1_use_cases.md.

–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–∞—Ö –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤.
"""

import os
import sys
import logging
from typing import List

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from app.clients.llm_client import OpenRouterLLMClient
from app.models.schemas import LLMResponse, OrderData, StatusEnum

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ @scen1_use_cases.md
TEST_CASES = [
    # –ü—Ä—è–º–æ–π —Ç–µ–∫—Å—Ç
    "#—Å10409 –û—Ç–≤–µ—Ä—Å—Ç–∏—è –º3 –Ω–µ –≤—Å–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≥–∞ –æ–±–µ–∏—Ö –¥–µ—Ç–∞–ª—è—Ö. –ü—Ä–æ–¥—É–≤–∫–∞ –Ω–µ –ø–æ–º–æ–≥–ª–∞",
    "#—Å10494 #—Å10495 –ì–æ–¥–Ω–æ",
    "#—Å8516 –°—Ç–µ–Ω–∫–∏ –∞–∫–±. –ü–µ—Ä–µ–±—Ä–∞–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É. 39 —à—Ç—É–∫ –≥–æ–¥–Ω—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≥–∞–ª—Ç–æ–≤–∫–∞. 23 —à—Ç—É–∫–∏ —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–∏–º—ã–º–∏ –∑–∞–±–æ—è–º–∏ - –±—Ä–∞–∫. –ì–æ–¥–Ω—ã–µ —Å—Ç–æ—è—Ç –Ω–∞ –ø–æ–ª–∫–µ –≥–∞–ª—Ç–æ–≤–∫–∏",
    "#—Å10343\n\t–£—à–µ–ª —Ä–∞–∑–º–µ—Ä —Ç–æ–ª—â–∏–Ω—ã –ª–µ–ø–µ—Å—Ç–∫–∞, –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø—Ä–µ–¥–µ–ª–µ 6,87-6,88\n\t–†–∞–∑–º–µ—Ä 9 –≤ + –Ω–∞ 0,01-0,02 (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 9,07\n\t–ò —Ä–∞–∑–º–µ—Ä 16,3 –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø—Ä–µ–¥–µ–ª–µ\n\t–í –æ—Å—Ç–∞–ª—å–Ω–æ–º –≥–æ–¥–Ω–æ",
    "#—Å10343\n\t–ì–æ–¥–Ω–æ, –Ω–æ –Ω–µ—Ç –∫–∞–ª–∏–±—Ä–∞ –ú3-6G, —Ä–µ–∑—å–±—É –Ω–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å\n\t–ö–∞–ª–∏–±—Ä 6–ù –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Ä–∞–∑–Ω—ã–µ –¥–æ–ø—É—Å–∫–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏—è",
    "6 #—Å10417 –ì–æ–¥–Ω–æ",
    
    # –ê—É–¥–∏–æ-—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è
    "—Å—Ç—Ä–æ–∫–∞ 10409 –û—Ç–≤–µ—Ä—Å—Ç–∏—è –º3 –Ω–µ –≤—Å–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≥–∞ –æ–±–µ–∏—Ö –¥–µ—Ç–∞–ª—è—Ö. –ü—Ä–æ–¥—É–≤–∫–∞ –Ω–µ –ø–æ–º–æ–≥–ª–∞",
    "8516 —Å—Ç—Ä–æ—á–∫–∞ –°—Ç–µ–Ω–∫–∏ –∞–∫–±. –ü–µ—Ä–µ–±—Ä–∞–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É. 39 —à—Ç—É–∫ –≥–æ–¥–Ω—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≥–∞–ª—Ç–æ–≤–∫–∞. 23 —à—Ç—É–∫–∏ —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–∏–º—ã–º–∏ –∑–∞–±–æ—è–º–∏ - –±—Ä–∞–∫. –ì–æ–¥–Ω—ã–µ —Å—Ç–æ—è—Ç –Ω–∞ –ø–æ–ª–∫–µ –≥–∞–ª—Ç–æ–≤–∫–∏",
    "—Å—Ç—Ä–æ–∫–∏ 10494 –∏ 10495 –ì–æ–¥–Ω–æ",
    "10343\n\t–£—à–µ–ª —Ä–∞–∑–º–µ—Ä —Ç–æ–ª—â–∏–Ω—ã –ª–µ–ø–µ—Å—Ç–∫–∞, –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø—Ä–µ–¥–µ–ª–µ 6,87-6,88\n\t–†–∞–∑–º–µ—Ä 9 –≤ + –Ω–∞ 0,01-0,02 (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 9,07\n\t–ò —Ä–∞–∑–º–µ—Ä 16,3 –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –Ω–∞ –Ω–∏–∂–Ω–µ–º –ø—Ä–µ–¥–µ–ª–µ\n\t–í –æ—Å—Ç–∞–ª—å–Ω–æ–º –≥–æ–¥–Ω–æ",
    
    # OCR —Ç–µ–∫—Å—Ç
    "10432 - –≥–æ–¥–Ω–æ",
    "9587 - –≤—Å–µ –≤ –±—Ä–∞–∫",
    "10456\n\t- 39 —à—Ç—É–∫ –≥–æ–¥–Ω—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≥–∞–ª—Ç–æ–≤–∫–∞\n\t- 23 —à—Ç—É–∫–∏ —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–∏–º—ã–º–∏ –∑–∞–±–æ—è–º–∏ - –±—Ä–∞–∫",
    "8567 - –Ω–æ—Ä–º"
]


def test_llm_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ LLM."""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    api_key = os.getenv("OPENROUTER_API_KEY")
    if not api_key:
        logger.error("OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return False
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
    try:
        client = OpenRouterLLMClient(api_key=api_key, model="gpt-4")
        logger.info("LLM –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ LLM –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞
    if not client.is_available():
        logger.error("LLM —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    
    logger.info("LLM —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
    
    success_count = 0
    total_count = len(TEST_CASES)
    
    for i, test_text in enumerate(TEST_CASES, 1):
        logger.info(f"\n--- –¢–µ—Å—Ç {i}/{total_count} ---")
        logger.info(f"–í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç: {test_text[:100]}...")
        
        try:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
            response = client.process_text(test_text)
            
            if response.requires_correction:
                logger.warning(f"–¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ç–æ—á–Ω–µ–Ω–∏–µ: {response.clarification_question}")
            else:
                logger.info(f"–ò–∑–≤–ª–µ—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(response.orders)}")
                for order in response.orders:
                    logger.info(f"  - –ó–∞–∫–∞–∑ #{order.order_id}: {order.status} - {order.comment or '–±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}")
                
                if response.orders:
                    success_count += 1
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ—Å—Ç–∞ {i}: {e}")
    
    logger.info(f"\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---")
    logger.info(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {success_count}/{total_count} —Ç–µ—Å—Ç–æ–≤")
    logger.info(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_count/total_count*100:.1f}%")
    
    return success_count >= total_count * 0.8  # 80% —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤


def test_specific_cases():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤."""
    
    api_key = os.getenv("OPENROUTER_API_KEY")
    if not api_key:
        logger.error("OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    client = OpenRouterLLMClient(api_key=api_key, model="gpt-4")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π —Å –æ–¥–Ω–∏–º –∑–∞–∫–∞–∑–æ–º
    logger.info("\n=== –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π ===")
    text1 = "#—Å10409 –û—Ç–≤–µ—Ä—Å—Ç–∏—è –º3 –Ω–µ –≤—Å–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≥–∞ –æ–±–µ–∏—Ö –¥–µ—Ç–∞–ª—è—Ö. –ü—Ä–æ–¥—É–≤–∫–∞ –Ω–µ –ø–æ–º–æ–≥–ª–∞"
    response1 = client.process_text(text1)
    
    if response1.orders and len(response1.orders) == 1:
        order = response1.orders[0]
        if order.order_id == "10409" and order.status == StatusEnum.rework:
            logger.info("‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω: –∑–∞–∫–∞–∑ 10409, —Å—Ç–∞—Ç—É—Å '–≤ –¥–æ—Ä–∞–±–æ—Ç–∫—É'")
        else:
            logger.warning(f"‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –æ–∂–∏–¥–∞–ª—Å—è –∑–∞–∫–∞–∑ 10409 —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–≤ –¥–æ—Ä–∞–±–æ—Ç–∫—É', –ø–æ–ª—É—á–µ–Ω {order.order_id} —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º {order.status}")
    else:
        logger.warning("‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω –∑–∞–∫–∞–∑")
    
    # –¢–µ—Å—Ç 2: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    logger.info("\n=== –¢–µ—Å—Ç 2: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã ===")
    text2 = "#—Å10494 #—Å10495 –ì–æ–¥–Ω–æ"
    response2 = client.process_text(text2)
    
    if response2.orders and len(response2.orders) == 2:
        order_ids = [order.order_id for order in response2.orders]
        if "10494" in order_ids and "10495" in order_ids:
            logger.info("‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω: –∏–∑–≤–ª–µ—á–µ–Ω—ã –∑–∞–∫–∞–∑—ã 10494 –∏ 10495")
        else:
            logger.warning(f"‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –æ–∂–∏–¥–∞–ª–∏—Å—å –∑–∞–∫–∞–∑—ã 10494 –∏ 10495, –ø–æ–ª—É—á–µ–Ω—ã {order_ids}")
    else:
        logger.warning(f"‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –æ–∂–∏–¥–∞–ª–æ—Å—å 2 –∑–∞–∫–∞–∑–∞, –ø–æ–ª—É—á–µ–Ω–æ {len(response2.orders) if response2.orders else 0}")
    
    # –¢–µ—Å—Ç 3: OCR —Ñ–æ—Ä–º–∞—Ç
    logger.info("\n=== –¢–µ—Å—Ç 3: OCR —Ñ–æ—Ä–º–∞—Ç ===")
    text3 = "10432 - –≥–æ–¥–Ω–æ"
    response3 = client.process_text(text3)
    
    if response3.orders and len(response3.orders) == 1:
        order = response3.orders[0]
        if order.order_id == "10432" and order.status == StatusEnum.approved:
            logger.info("‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω: –∑–∞–∫–∞–∑ 10432, —Å—Ç–∞—Ç—É—Å '–≥–æ–¥–Ω–æ'")
        else:
            logger.warning(f"‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –æ–∂–∏–¥–∞–ª—Å—è –∑–∞–∫–∞–∑ 10432 —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–≥–æ–¥–Ω–æ', –ø–æ–ª—É—á–µ–Ω {order.order_id} —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º {order.status}")
    else:
        logger.warning("‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω –∑–∞–∫–∞–∑")


if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö LLM...")
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    success = test_llm_extraction()
    
    if success:
        logger.info("\nüéâ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        test_specific_cases()
    else:
        logger.error("\n‚ùå –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
    
    logger.info("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
