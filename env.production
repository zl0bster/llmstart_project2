# OTK Assistant - Переменные окружения для продакшна
# Этот файл содержит рекомендуемые настройки для развертывания в продакшне

# =============================================================================
# БОТ И БАЗА ДАННЫХ
# =============================================================================

# Токен Telegram бота (ОБЯЗАТЕЛЬНО)
# Получите у @BotFather в Telegram
BOT_TOKEN=

# Строка подключения к базе данных
# Для Railway: оставьте SQLite (постоянное хранилище предоставляется)
# Для собственного сервера: используйте PostgreSQL
DATABASE_URL=sqlite:///data/otk_assistant.db

# Таймаут неактивной сессии в минутах
SESSION_TIMEOUT_MIN=15

# =============================================================================
# ЛОГИ И КЭШ
# =============================================================================

# Уровень логирования для продакшна
LOG_LEVEL=INFO

# Директория для логов
LOG_DIR=logs/

# Вывод логов в консоль (для контейнеров)
LOG_CONSOLE=true

# Формат консольного вывода (json для продакшна)
LOG_CONSOLE_FORMAT=json

# Корневая папка кэша
CACHE_DIR=cache/

# Кэш фотографий
CACHE_PHOTOS_DIR=cache/photos/

# Кэш аудио файлов
CACHE_AUDIO_DIR=cache/audio/

# Директория с текстовыми промптами
PROMPTS_DIR=prompts/

# =============================================================================
# ОГРАНИЧЕНИЯ МЕДИА
# =============================================================================

# Максимальный размер фото в МБ
MAX_IMAGE_MB=20

# Максимальное разрешение фото (ширина x высота)
MAX_IMAGE_RES=2048x2048

# Максимальный размер аудио в МБ
MAX_AUDIO_MB=25

# Максимальная длительность аудио в минутах
MAX_AUDIO_MIN=25

# Минимальная частота дискретизации аудио (Гц)
AUDIO_MIN_SAMPLE_RATE=16000

# Приводить аудио к моно (true|false)
AUDIO_MONO=true

# =============================================================================
# ПРОВАЙДЕРЫ И МОДЕЛИ (РЕКОМЕНДУЕМЫЕ ДЛЯ ПРОДАКШНА)
# =============================================================================

# Провайдер для текстового анализа
# Рекомендации:
# - openrouter: стабильный, быстрый, платный
# - ollama: бесплатный, требует ресурсов
LLM_PROVIDER=openrouter

# Текстовая модель
# Рекомендации для OpenRouter:
# - openai/gpt-4o-mini: быстрый, дешевый
# - openai/gpt-4o: качественный, дорогой
# - anthropic/claude-3-haiku: альтернатива GPT
TEXT_MODEL=openai/gpt-4o-mini

# Провайдер для анализа изображений
VISION_PROVIDER=openrouter

# Модель для анализа изображений
# Рекомендации:
# - openai/gpt-4o: лучший для анализа изображений
# - anthropic/claude-3-haiku-vision: альтернатива
VISION_MODEL=openai/gpt-4o

# Провайдер для обработки речи
# Рекомендации:
# - whisperapi: дешевле OpenAI Whisper
# - whisper: OpenAI Whisper (дороже)
SPEECH_PROVIDER=whisperapi

# Модель для обработки речи
# Рекомендации:
# - large-v2: лучшее качество
# - medium: баланс качества и скорости
SPEECH_MODEL=large-v2

# =============================================================================
# КЛЮЧИ И ДОСТУП (НАСТРОЙТЕ В RAILWAY DASHBOARD)
# =============================================================================

# API ключ для OpenRouter (если используется)
OPENROUTER_API_KEY=

# API ключ для OpenAI (для GPT-4 Vision/Whisper)
OPENAI_API_KEY=

# API ключ для WhisperAPI.com (альтернатива OpenAI Whisper)
WHISPERAPI_API_KEY=

# URL локального LM Studio (не используется в продакшне)
LMSTUDIO_BASE_URL=http://localhost:1234

# URL Ollama (не используется в продакшне)
OLLAMA_BASE_URL=http://localhost:11434

# =============================================================================
# СЕТЕВЫЕ ПАРАМЕТРЫ
# =============================================================================

# Таймаут HTTP запросов в секундах
HTTP_TIMEOUT_SEC=30

# Количество повторов при временных ошибках
HTTP_RETRIES=3

# Задержка между повторами в секундах
HTTP_RETRY_BACKOFF_SEC=2

# =============================================================================
# ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ OLLAMA (НЕ ИСПОЛЬЗУЕТСЯ В ПРОДАКШНЕ)
# =============================================================================

# Автоматическое скачивание модели при запуске
OLLAMA_AUTO_PULL=false

# Таймаут для Ollama запросов в секундах
OLLAMA_TIMEOUT_SEC=300

# Количество токенов для генерации ответа
OLLAMA_NUM_PREDICT=500

# Температура для генерации (0.0-1.0)
OLLAMA_TEMPERATURE=0.1

# =============================================================================
# НАСТРОЙКИ ДЛЯ RAILWAY
# =============================================================================

# Railway автоматически предоставляет:
# - Постоянное хранилище для SQLite БД
# - Переменные окружения через Dashboard
# - Автоматический деплой из Git
# - Health check endpoint

# Для настройки в Railway:
# 1. Зайдите в Railway Dashboard
# 2. Выберите ваш проект
# 3. Перейдите в Variables
# 4. Добавьте переменные из этого файла
# 5. Обязательно настройте BOT_TOKEN и API ключи

# =============================================================================
# НАСТРОЙКИ ДЛЯ СОБСТВЕННОГО СЕРВЕРА
# =============================================================================

# Для собственного сервера рекомендуется:

# 1. Использовать PostgreSQL вместо SQLite:
# DATABASE_URL=postgresql://user:password@localhost:5432/otk_assistant

# 2. Настроить Redis для кэширования:
# REDIS_URL=redis://localhost:6379/0

# 3. Использовать Ollama для экономии:
# LLM_PROVIDER=ollama
# TEXT_MODEL=qwen2.5:7b
# OLLAMA_BASE_URL=http://localhost:11434

# 4. Настроить HTTPS и домен
# 5. Настроить мониторинг и алерты
# 6. Настроить автоматические бэкапы
